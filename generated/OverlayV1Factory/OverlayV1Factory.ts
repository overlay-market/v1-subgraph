// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class EmergencyShutdown extends ethereum.Event {
  get params(): EmergencyShutdown__Params {
    return new EmergencyShutdown__Params(this);
  }
}

export class EmergencyShutdown__Params {
  _event: EmergencyShutdown;

  constructor(event: EmergencyShutdown) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get market(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class FeeRecipientUpdated extends ethereum.Event {
  get params(): FeeRecipientUpdated__Params {
    return new FeeRecipientUpdated__Params(this);
  }
}

export class FeeRecipientUpdated__Params {
  _event: FeeRecipientUpdated;

  constructor(event: FeeRecipientUpdated) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get recipient(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class FeedFactoryAdded extends ethereum.Event {
  get params(): FeedFactoryAdded__Params {
    return new FeedFactoryAdded__Params(this);
  }
}

export class FeedFactoryAdded__Params {
  _event: FeedFactoryAdded;

  constructor(event: FeedFactoryAdded) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get feedFactory(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class FeedFactoryRemoved extends ethereum.Event {
  get params(): FeedFactoryRemoved__Params {
    return new FeedFactoryRemoved__Params(this);
  }
}

export class FeedFactoryRemoved__Params {
  _event: FeedFactoryRemoved;

  constructor(event: FeedFactoryRemoved) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get feedFactory(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class MarketDeployed extends ethereum.Event {
  get params(): MarketDeployed__Params {
    return new MarketDeployed__Params(this);
  }
}

export class MarketDeployed__Params {
  _event: MarketDeployed;

  constructor(event: MarketDeployed) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get market(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get feed(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class ParamUpdated extends ethereum.Event {
  get params(): ParamUpdated__Params {
    return new ParamUpdated__Params(this);
  }
}

export class ParamUpdated__Params {
  _event: ParamUpdated;

  constructor(event: ParamUpdated) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get market(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get name(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get value(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class OverlayV1Factory extends ethereum.SmartContract {
  static bind(address: Address): OverlayV1Factory {
    return new OverlayV1Factory("OverlayV1Factory", address);
  }

  PARAMS_MAX(param0: BigInt): BigInt {
    let result = super.call("PARAMS_MAX", "PARAMS_MAX(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(param0),
    ]);

    return result[0].toBigInt();
  }

  try_PARAMS_MAX(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("PARAMS_MAX", "PARAMS_MAX(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(param0),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  PARAMS_MIN(param0: BigInt): BigInt {
    let result = super.call("PARAMS_MIN", "PARAMS_MIN(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(param0),
    ]);

    return result[0].toBigInt();
  }

  try_PARAMS_MIN(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("PARAMS_MIN", "PARAMS_MIN(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(param0),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  deployMarket(
    feedFactory: Address,
    feed: Address,
    params: Array<BigInt>,
  ): Address {
    let result = super.call(
      "deployMarket",
      "deployMarket(address,address,uint256[15]):(address)",
      [
        ethereum.Value.fromAddress(feedFactory),
        ethereum.Value.fromAddress(feed),
        ethereum.Value.fromUnsignedBigIntArray(params),
      ],
    );

    return result[0].toAddress();
  }

  try_deployMarket(
    feedFactory: Address,
    feed: Address,
    params: Array<BigInt>,
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "deployMarket",
      "deployMarket(address,address,uint256[15]):(address)",
      [
        ethereum.Value.fromAddress(feedFactory),
        ethereum.Value.fromAddress(feed),
        ethereum.Value.fromUnsignedBigIntArray(params),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  deployer(): Address {
    let result = super.call("deployer", "deployer():(address)", []);

    return result[0].toAddress();
  }

  try_deployer(): ethereum.CallResult<Address> {
    let result = super.tryCall("deployer", "deployer():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  feeRecipient(): Address {
    let result = super.call("feeRecipient", "feeRecipient():(address)", []);

    return result[0].toAddress();
  }

  try_feeRecipient(): ethereum.CallResult<Address> {
    let result = super.tryCall("feeRecipient", "feeRecipient():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getMarket(param0: Address): Address {
    let result = super.call("getMarket", "getMarket(address):(address)", [
      ethereum.Value.fromAddress(param0),
    ]);

    return result[0].toAddress();
  }

  try_getMarket(param0: Address): ethereum.CallResult<Address> {
    let result = super.tryCall("getMarket", "getMarket(address):(address)", [
      ethereum.Value.fromAddress(param0),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isFeedFactory(param0: Address): boolean {
    let result = super.call("isFeedFactory", "isFeedFactory(address):(bool)", [
      ethereum.Value.fromAddress(param0),
    ]);

    return result[0].toBoolean();
  }

  try_isFeedFactory(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isFeedFactory",
      "isFeedFactory(address):(bool)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isMarket(param0: Address): boolean {
    let result = super.call("isMarket", "isMarket(address):(bool)", [
      ethereum.Value.fromAddress(param0),
    ]);

    return result[0].toBoolean();
  }

  try_isMarket(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isMarket", "isMarket(address):(bool)", [
      ethereum.Value.fromAddress(param0),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  ovl(): Address {
    let result = super.call("ovl", "ovl():(address)", []);

    return result[0].toAddress();
  }

  try_ovl(): ethereum.CallResult<Address> {
    let result = super.tryCall("ovl", "ovl():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _ovl(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _feeRecipient(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddFeedFactoryCall extends ethereum.Call {
  get inputs(): AddFeedFactoryCall__Inputs {
    return new AddFeedFactoryCall__Inputs(this);
  }

  get outputs(): AddFeedFactoryCall__Outputs {
    return new AddFeedFactoryCall__Outputs(this);
  }
}

export class AddFeedFactoryCall__Inputs {
  _call: AddFeedFactoryCall;

  constructor(call: AddFeedFactoryCall) {
    this._call = call;
  }

  get feedFactory(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddFeedFactoryCall__Outputs {
  _call: AddFeedFactoryCall;

  constructor(call: AddFeedFactoryCall) {
    this._call = call;
  }
}

export class DeployMarketCall extends ethereum.Call {
  get inputs(): DeployMarketCall__Inputs {
    return new DeployMarketCall__Inputs(this);
  }

  get outputs(): DeployMarketCall__Outputs {
    return new DeployMarketCall__Outputs(this);
  }
}

export class DeployMarketCall__Inputs {
  _call: DeployMarketCall;

  constructor(call: DeployMarketCall) {
    this._call = call;
  }

  get feedFactory(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get feed(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get params(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }
}

export class DeployMarketCall__Outputs {
  _call: DeployMarketCall;

  constructor(call: DeployMarketCall) {
    this._call = call;
  }

  get market_(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class RemoveFeedFactoryCall extends ethereum.Call {
  get inputs(): RemoveFeedFactoryCall__Inputs {
    return new RemoveFeedFactoryCall__Inputs(this);
  }

  get outputs(): RemoveFeedFactoryCall__Outputs {
    return new RemoveFeedFactoryCall__Outputs(this);
  }
}

export class RemoveFeedFactoryCall__Inputs {
  _call: RemoveFeedFactoryCall;

  constructor(call: RemoveFeedFactoryCall) {
    this._call = call;
  }

  get feedFactory(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveFeedFactoryCall__Outputs {
  _call: RemoveFeedFactoryCall;

  constructor(call: RemoveFeedFactoryCall) {
    this._call = call;
  }
}

export class SetFeeRecipientCall extends ethereum.Call {
  get inputs(): SetFeeRecipientCall__Inputs {
    return new SetFeeRecipientCall__Inputs(this);
  }

  get outputs(): SetFeeRecipientCall__Outputs {
    return new SetFeeRecipientCall__Outputs(this);
  }
}

export class SetFeeRecipientCall__Inputs {
  _call: SetFeeRecipientCall;

  constructor(call: SetFeeRecipientCall) {
    this._call = call;
  }

  get _feeRecipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetFeeRecipientCall__Outputs {
  _call: SetFeeRecipientCall;

  constructor(call: SetFeeRecipientCall) {
    this._call = call;
  }
}

export class SetRiskParamCall extends ethereum.Call {
  get inputs(): SetRiskParamCall__Inputs {
    return new SetRiskParamCall__Inputs(this);
  }

  get outputs(): SetRiskParamCall__Outputs {
    return new SetRiskParamCall__Outputs(this);
  }
}

export class SetRiskParamCall__Inputs {
  _call: SetRiskParamCall;

  constructor(call: SetRiskParamCall) {
    this._call = call;
  }

  get feed(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get name(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get value(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SetRiskParamCall__Outputs {
  _call: SetRiskParamCall;

  constructor(call: SetRiskParamCall) {
    this._call = call;
  }
}

export class ShutdownCall extends ethereum.Call {
  get inputs(): ShutdownCall__Inputs {
    return new ShutdownCall__Inputs(this);
  }

  get outputs(): ShutdownCall__Outputs {
    return new ShutdownCall__Outputs(this);
  }
}

export class ShutdownCall__Inputs {
  _call: ShutdownCall;

  constructor(call: ShutdownCall) {
    this._call = call;
  }

  get feed(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ShutdownCall__Outputs {
  _call: ShutdownCall;

  constructor(call: ShutdownCall) {
    this._call = call;
  }
}
